syntax = "proto2";

package hl_communication;

import "position.proto";

enum Action {
  UNDEFINED        = 0;// None of the action matches current action
  POSITIONING      = 1;// Robot is repositionning (but do not plan to kick immediately)
  GOING_TO_KICK    = 2;// Robot is moving toward the ball in order to kick
  KICKING          = 3;// Robot is currently performing the kick motion
  GOING_TO_DRIBBLE = 4;// Robot is moving toward the ball and plans to dribble
  DRIBBLING        = 5;// Robot is actively dribbling
  WAITING          = 6;// Robot is waiting for something to happen
  SEARCHING_BALL   = 7;// Robot is trying to find the position of the ball on the field
}

message KickIntention {
  /**
   * Expected position of the ball in field referential when the player will kick it
   */
  optional PositionDistribution start = 1;
  /**
   * Planned target for the ball in field referential
   */
  optional PositionDistribution target = 2;
}

/**
 * Describes the intention of the robot:
 * - Uncertainty can be used to express tolerance on targets or uncertainty on action results
 */
message Intention {
  /**
   * Destination of the robot in field referential
   */
  optional PoseDistribution target_pose_in_field = 1;

  /**
   * List of waypoints in field referential (useful when avoiding an obstacle
   * for example), first element of the vector is the next waypoint
   */
  repeated PoseDistribution waypoints_in_field = 2;

  /**
   * Current action planned by the robot
   */
  optional Action action_planned = 3;

  /**
   * Estimated result for the ball position after next kick, when ball has
   * stopped
   */
  optional PositionDistribution kick_target_in_field = 4;

  /**
   * Intention of kicking, allows to specify position of ball at impact
   */
  optional KickIntention kick = 6;

  /**
   * Up to teams
   */
  optional string free_field = 5;
}
